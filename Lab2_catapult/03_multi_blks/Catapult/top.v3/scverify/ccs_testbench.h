// ----------------------------------------------------------------------------
// User Testbench Interface Header
//
//    HLS version: 2023.2/1059873 Production Release
//       HLS date: Mon Aug  7 10:54:31 PDT 2023
//  Flow Packages: HDL_Tcl 8.0a, SCVerify 10.4
//
//   Generated by: r12016@cad40
// Generated date: Sun Mar 24 17:33:25 CST 2024
//
// ----------------------------------------------------------------------------

#ifndef CCS_TESTBENCH_H
#define CCS_TESTBENCH_H

#include <ac_int.h>
#include <ac_channel.h>
#include "mc_wait_ctrl.h"
#include <string.h>
#include <iostream>

class testbench
{
   public:
   int argc;
   char** argv;
   int main(); //CCS_MAIN
   static bool enable_idle_sync_mode;
   static unsigned short idle_sync_stable_cycles;
   static void set_enable_stalls(bool flag);
   static void reset_request();
   static void* _dut_inst;
   static void* dut_inst();
   static void* set_dut_inst( void* _inst );
   static bool din_ignore;
   static bool din_skip;
   static bool din_skip_quiet;
   static bool din_skip_once;
   static bool din_skip_noerr;
   static int  din_array_comp_first;
   static int  din_array_comp_last;
   static mc_wait_ctrl din_wait_ctrl;
   static bool coeffs_ignore;
   static bool coeffs_skip;
   static bool coeffs_skip_quiet;
   static bool coeffs_skip_once;
   static bool coeffs_skip_noerr;
   static int  coeffs_array_comp_first;
   static int  coeffs_array_comp_last;
   static mc_wait_ctrl coeffs_wait_ctrl;
   static bool dout_ignore;
   static bool dout_skip;
   static bool dout_skip_quiet;
   static bool dout_skip_once;
   static bool dout_skip_noerr;
   static int  dout_array_comp_first;
   static int  dout_array_comp_last;
   static bool dout_use_mask;
   static ac_int<8, true > dout_output_mask;
   static mc_wait_ctrl dout_wait_ctrl;
   #ifndef CCS_SCVERIFY_USE_CCS_BLOCK
   static void exec_run(ac_channel<ac_int<8, true> > &din, ac_int<8, true> coeffs[8], ac_channel<ac_int<8, true> > &dout);
   #endif
   explicit testbench(int _argc, const char* const *_argv)
      :argc(_argc), argv(const_cast<char**>(_argv))
   {
   }
   ~testbench()
   {
   }
   private:
   testbench() {}
};
extern void mc_testbench_reset_request();
extern void* mc_testbench_dut_inst();
extern void* mc_testbench_set_dut_inst( void* _inst );
extern void mc_testbench_wait_for_idle_sync();
extern void mc_testbench_din_skip(bool v);
extern void mc_testbench_coeffs_skip(bool v);
extern void mc_testbench_dout_skip(bool v);
#endif //CCS_TESTBENCH_H
